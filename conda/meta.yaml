{% set data = load_setup_py_data() %}

package:
  name: mapreader
  version: {{ data['version'] }}

source:
  path: ..

build:
  # If the installation is complex, or different between Unix and Windows, use
  # separate bld.bat and build.sh files instead of this key.  Add the line
  # "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or
  # "skip: True  # [not win]" to limit to Windows.
  script: 
  # First create a local index of the dependencies that aren't on conda-forge
  - echo "do conda-index stuff here"
  # Now build the package itself
  - {{ PYTHON }} -m pip install --no-deps --ignore-installed -vv .
  
#   entry_points:
#     {% for entry in data['entry_points']['console_scripts'] %}
#       - {{ entry.split('=')[0].strip() }} = {{ entry.split('=')[1].strip() }}
#     {% endfor %}
  

requirements:
  # if you need compilers, uncomment these
  #    read more at https://docs.conda.io/projects/conda-build/en/latest/resources/compiler-tools.html
  # build:
  #   - {{ compilers('c') }}
  
  # host:
  #   - python
  #   - pip
  build:
    - python
    - setuptools
  run:
    - python
    # - "proj[version='>=0.2.0,<0.3.0']" # ?
    # - ipyannotate==0.1.0-beta.0
    # - "torch[version='>=1.10.0,<2.0.0']"
    # - "parhugin[version='>=0.0.3,<0.0.4']"
    # dependencies are defined in setup.py
    {% for dep in data['install_requires'] %}
    # Map PyPI names to conda-forge names. EG:
    # - torch to pytorch
    {% if dep.startswith('torch') and not dep.startswith('torchvision') %}
    - {{ "py{}".format(dep.lower()) }}
    {% elif dep.startswith('ipyannotate==0.1.0-beta.0') %}
    - ipyannotate==0.1.0b0
    # {% elif dep.startswith('parhugin') or dep.startswith('ipyannotate') %}
    # Skip parhugin and ipyannotate
    # TEMP FIX: parhugin is not on conda-forge
    {% else %}
    - {{ dep.lower() }}
    {% endif %}
    {% endfor %}

test:
  imports:
    - mapreader
  # source_files:
  #   - tests
  # requires:
  #   - pytest
  #   - pytest-cov
  # commands:
  #   - pytest

about:
  home: https://github.com/Living-with-machines/MapReader
  summary: MapReader
  license: {{ data.get('license') }}
  license_file: LICENSE
